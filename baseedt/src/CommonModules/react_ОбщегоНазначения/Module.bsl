Функция МассивСтруктурВJSON(Данные) Экспорт

	ЗаписьJSON = Новый ЗаписьJSON;
	ПарамтерыЗаписи = Новый ПараметрыЗаписиJSON(, Символы.Таб);
	
	ЗаписьJSON.УстановитьСтроку(ПарамтерыЗаписи);
 
	НастройкиСериализацииJSON = Новый НастройкиСериализацииJSON;
	//НастройкиСериализацииJSON.ВариантЗаписиДаты = ВариантЗаписиДатыJSON.ЛокальнаяДатаСоСмещением;
	//НастройкиСериализацииJSON.ФорматСериализацииДаты = ФорматДатыJSON.ISO;
	
	ЗаписатьJSON(ЗаписьJSON, Данные, НастройкиСериализацииJSON);
	
	Возврат ЗаписьJSON.Закрыть();

КонецФункции // МассивСтруктурВJSON()

Функция ПолучитьТипВзаимодействия(Ссылка) Экспорт
	
	ТипСсылки = ТипЗнч(Ссылка);

	Ответ = Новый Структура("typeBack, type, frontDocName");
	
	Если ТипСсылки = Тип("ДокументСсылка.Встреча") Тогда
		Ответ.typeBack	 	= "Встреча";
		Ответ.frontDocName 	= "Встреча";
		Ответ.type 			= "meeting"; 
	ИначеЕсли ТипСсылки = Тип("ДокументСсылка.ЗапланированноеВзаимодействие") Тогда
		Ответ.typeBack	 	= "ЗапланированноеВзаимодействие";
		Ответ.frontDocName 	= "Запланированное взаимодействие";
		Ответ.type 			= "plannedAction";
	ИначеЕсли ТипСсылки = Тип("ДокументСсылка.СообщениеSMS") Тогда
		Ответ.typeBack	 	= "СообщениеSMS";
		Ответ.frontDocName 	= "Сообщение SMS";
		Ответ.type 			= "SMS";
	ИначеЕсли ТипСсылки = Тип("ДокументСсылка.ТелефонныйЗвонок") Тогда
		Ответ.typeBack	 	= "ТелефонныйЗвонок";
		Ответ.frontDocName 	= "Телефонный звонок";
		Ответ.type 			= "telephoneCall";	
	ИначеЕсли ТипСсылки = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
		Ответ.typeBack	 	= "ЭлектронноеПисьмоВходящее";
		Ответ.frontDocName 	= "Электронное письмо входящее";
		Ответ.type 			= "inbox";
	ИначеЕсли ТипСсылки = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
		Ответ.typeBack	 	= "ЭлектронноеПисьмоИсходящее";
		Ответ.frontDocName 	= "Электронное письмо исходящее";
		Ответ.type 			= "outbox";
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции // ПолучитьТипВзаимодействия()

Функция ПолучитьСтруктуруИзJSON(СтрокаJSON) Экспорт

	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(СтрокаJSON);
	
	Структура = ПрочитатьJSON(Чтение);
	
	Чтение.Закрыть();
	
	Возврат Структура;
	
КонецФункции

Функция ПолучитьСсылкуНаВариантВажности(Значение) Экспорт
	
	Для каждого ЭлементПеречисления Из Метаданные.Перечисления.ВариантыВажностиВзаимодействия.ЗначенияПеречисления Цикл
        Если ЭлементПеречисления.Синоним = Значение Тогда
            Возврат Перечисления.ВариантыВажностиВзаимодействия[ЭлементПеречисления.Имя];
        КонецЕсли; 
    КонецЦикла;
	
КонецФункции

Функция ПолучитьТипВзаимодействияПоПредставлению(Представление) Экспорт
	
	Если СтрНайти(Представление, "Встреча") Тогда
		ТипДокумента	 	= "Встреча"; 
	ИначеЕсли СтрНайти(Представление, "Запланированное взаимодействие") Тогда
		ТипДокумента	 	= "ЗапланированноеВзаимодействие";
	ИначеЕсли СтрНайти(Представление, "Сообщение SMS") Тогда
		ТипДокумента	 	= "СообщениеSMS";
	ИначеЕсли СтрНайти(Представление, "Телефонный звонок") Тогда
		ТипДокумента	 	= "ТелефонныйЗвонок";	
	ИначеЕсли СтрНайти(Представление, "Электронное письмо входящее") Тогда
		ТипДокумента	 	= "ЭлектронноеПисьмоВходящее";
	ИначеЕсли СтрНайти(Представление, "Электронное письмо исходящее") Тогда
		ТипДокумента	 	= "ЭлектронноеПисьмоИсходящее";
	КонецЕсли;
	
	Возврат ТипДокумента;
КонецФункции

Функция СформироватьОтветJSON(СтруктураОтвета, Запрос) Экспорт
	
	Ответ = Новый HTTPСервисОтвет(200);
	
	Origin = Запрос.Заголовки.Получить("Origin");
	Если Origin = Неопределено Тогда
		Ответ.Заголовки.Вставить("Access-Control-Allow-Origin", "*");
	Иначе
		Ответ.Заголовки.Вставить("Access-Control-Allow-Origin", Origin);
	КонецЕсли;
	
	Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Headers", "Authorization,Content-type");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Methods", "GET, PUT, POST, DELETE, HEAD, OPTIONS");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Headers", "X-Requested-With, origin, content-type, accept");
	Ответ.УстановитьТелоИзСтроки(СтруктураОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
	
	Возврат Ответ;
	
КонецФункции //  СформироватьОтвет() 

Функция СформироватьОтветJSON_СозданиеОбновлениеВзаимодействия(СтруктураОтвета, Запрос) Экспорт
	
	Ответ = Новый HTTPСервисОтвет(СтруктураОтвета.Код);
	
	Origin = Запрос.Заголовки.Получить("Origin");
	Если Origin = Неопределено Тогда
		Ответ.Заголовки.Вставить("Access-Control-Allow-Origin", "*");
	Иначе
		Ответ.Заголовки.Вставить("Access-Control-Allow-Origin", Origin);
	КонецЕсли;
	
	Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Headers", "Authorization,Content-type");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Methods", "GET, PUT, POST, DELETE, HEAD, OPTIONS");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Headers", "X-Requested-With, origin, content-type, accept");
	Ответ.УстановитьТелоИзСтроки(СтруктураОтвета.Тело, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
	
	Возврат Ответ;
	
КонецФункции //  СформироватьОтвет()

Функция СформироватьОтветJSON_Аутентификация(СтруктураОтвета, Запрос) Экспорт
	
	Ответ = Новый HTTPСервисОтвет(СтруктураОтвета.Код);
	
	Origin = Запрос.Заголовки.Получить("Origin");
	Если Origin = Неопределено Тогда
		Ответ.Заголовки.Вставить("Access-Control-Allow-Origin", "*");
	Иначе
		Ответ.Заголовки.Вставить("Access-Control-Allow-Origin", Origin);
	КонецЕсли;
	
	Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Headers", "Authorization,Content-type");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Methods", "GET, PUT, POST, DELETE, HEAD, OPTIONS");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Headers", "X-Requested-With, origin, content-type, accept");
	Ответ.УстановитьТелоИзСтроки(СтруктураОтвета.Тело, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
	
	Возврат Ответ;
	
КонецФункции //  СформироватьОтвет()

Функция СформироватьОтветJSON_Заказы(СтруктураОтвета, Запрос) Экспорт
	
	Ответ = Новый HTTPСервисОтвет(200);
	
	Origin = Запрос.Заголовки.Получить("Origin");
	Если Origin = Неопределено Тогда
		Ответ.Заголовки.Вставить("Access-Control-Allow-Origin", "*");
	Иначе
		Ответ.Заголовки.Вставить("Access-Control-Allow-Origin", Origin);
	КонецЕсли;
	
	Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Headers", "Authorization,Content-type");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Methods", "GET, PUT, POST, DELETE, HEAD, OPTIONS");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Headers", "X-Requested-With, origin, content-type, accept");
	Ответ.УстановитьТелоИзСтроки(СтруктураОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
	
	Возврат Ответ;
	
КонецФункции //  СформироватьОтвет()

Функция СформироватьОтветJSON_Отчеты(СтруктураОтвета, Запрос) Экспорт
	
	Ответ = Новый HTTPСервисОтвет(200);
	
	Origin = Запрос.Заголовки.Получить("Origin");
	Если Origin = Неопределено Тогда
		Ответ.Заголовки.Вставить("Access-Control-Allow-Origin", "*");
	Иначе
		Ответ.Заголовки.Вставить("Access-Control-Allow-Origin", Origin);
	КонецЕсли;
	
	Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Headers", "Authorization,Content-type");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Methods", "GET, PUT, POST, DELETE, HEAD, OPTIONS");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Headers", "X-Requested-With, origin, content-type, accept");
	Ответ.УстановитьТелоИзСтроки(СтруктураОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
	
	Возврат Ответ;
	
КонецФункции //  СформироватьОтвет()

Функция СформироватьОтветJSON_Пользователи(СтруктураОтвета, Запрос) Экспорт
	
	Ответ = Новый HTTPСервисОтвет(200);
	
	Origin = Запрос.Заголовки.Получить("Origin");
	Если Origin = Неопределено Тогда
		Ответ.Заголовки.Вставить("Access-Control-Allow-Origin", "*");
	Иначе
		Ответ.Заголовки.Вставить("Access-Control-Allow-Origin", Origin);
	КонецЕсли;
	
	Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Headers", "Authorization,Content-type");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Methods", "GET, PUT, POST, DELETE, HEAD, OPTIONS");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Credentials", "true");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Headers", "X-Requested-With, origin, content-type, accept");
	Ответ.УстановитьТелоИзСтроки(СтруктураОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
	
	Возврат Ответ;
	
КонецФункции //  СформироватьОтвет()